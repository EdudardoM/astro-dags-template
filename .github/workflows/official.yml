name: Astronomer CI - Deploy code (Multiple Branches)

on:
  workflow_dispatch:
    inputs:
      deploymentId:
        description: "Deployment ID"
        required: true
        type: string
      apiToken:
        description: "Astro API Token"
        required: true
        type: string
  push:
    branches: [main]

jobs:
  deployment-type:
    runs-on: ubuntu-latest
    outputs:
      DAGS_ONLY: ${{ steps.deployment-type.outputs.DAGS_ONLY }}
    steps:
    - name: checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    # Determine if only DAGs have changes
    - name: Get Deployment Type
      id: deployment-type
      run: |
        files=$(git diff --name-only HEAD^..HEAD)
        dags_only=1

        for file in $files; do
          if [[ $file != "dags/"* ]]; then
            echo "$file is not a dag, triggering a full image build"
            dags_only=0
            break
          fi
        done

        echo "DAGS_ONLY=$dags_only" >> $GITHUB_OUTPUT

  prod-push:
    runs-on: ubuntu-latest
    needs: deployment-type
    env:
      ASTRO_API_TOKEN: ${{ inputs.apiToken || secrets.ASTRO_API_TOKEN }}
      DEPLOYMENT_ID: ${{ inputs.deploymentId || vars.DEPLOYMENT_ID }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: DAG-only deploy
        if: needs.deployment-type.outputs.DAGS_ONLY == '1'
        uses: astronomer/deploy-action@v0.10.1
        with:
          deployment-id: ${{ env.DEPLOYMENT_ID }}
          dags: true
          parse: true

      - name: Full image + DAG deploy
        if: needs.deployment-type.outputs.DAGS_ONLY == '0'
        uses: astronomer/deploy-action@v0.10.1
        with:
          deployment-id: ${{ env.DEPLOYMENT_ID }}
          parse: true
